name: ECS CI/CD Pipeline

on:
  push:
    branches:
      - main   
  pull_request:

jobs:
  build:
    name: Build & Push Image
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      IMAGE_REPO: flask-app
      IMAGE_TAG: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push image to Amazon ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO_URI=$ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO }}

          echo "Building Docker image..."
          docker build -t $REPO_URI:${{ env.IMAGE_TAG }} ./flask-app

          echo "Pushing to ECR..."
          docker push $REPO_URI:${{ env.IMAGE_TAG }}

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: build   

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        # if: github.event_name == 'pull_request'
        run: terraform plan -input=false

      - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
